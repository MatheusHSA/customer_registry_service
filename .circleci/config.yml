version: 2.1

dependencies:
  cache_directories:
    - ~/docker

jobs:
  build:
    working_directory: ~/customer_registry_service
    docker:
      - image: circleci/openjdk:8
      - image: circleci/mongo:4.0
    steps:
      - checkout

      - restore_cache:
          keys:
            - app-cache-{{ checksum "build.sbt" }}
            - app-cache-v1

      - save_cache:
          key: app-cache-{{ checksum "build.sbt" }}
          paths:
            - target/resolution-cache
            - target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.ivy2/cache
      - save_cache:
          # Change this key to start the next build with a fully clean cache and forget old scala, sbt and library versions
          key: app-cache-v1
          paths:
            - ~/.sbt
            - ~/.ivy2/cache

      - run:
          name: "Unit tests"
          command:
            sbt unit exit

      - run:
          name: "Integration tests"
          command:
            sbt integration exit

      - store_test_results:
          path: target/test-reports

  push-container:
    docker:
      - image: circleci/openjdk:8
      - image: joseronierison/scala-sbt:scala-2.11
    working_directory: ~/customer_registry_service
    environment:
      ARTIFACT_NAME: "gcr.io/vision-i40/customer_registry_service"
      GCP_ACCOUNT_FILE: "account.json"
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Build container"
          command: |
            export GIT_COMMIT=$CIRCLE_SHA1
            sbt docker:publishLocal

      - run:
          name: "Publish docker container"
          command: |
            echo  $SERVICE_ACCOUNT_CONTENT | base64 -d > $GCP_ACCOUNT_FILE
            gcloud auth activate-service-account --key-file $GCP_ACCOUNT_FILE
            gcloud auth configure-docker --quiet
            docker tag customer_registry_service:$CIRCLE_SHA1 $ARTIFACT_NAME:$CIRCLE_SHA1
            gcloud docker -- push $ARTIFACT_NAME:$CIRCLE_SHA1

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master